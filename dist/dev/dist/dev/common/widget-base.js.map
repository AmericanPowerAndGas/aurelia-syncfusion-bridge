{"version":3,"sources":["common/widget-base.js"],"names":[],"mappings":"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","file":"common/widget-base.js","sourceRoot":"/source/","sourcesContent":["import {getEventOption} from './events';\r\nimport {Util} from '../common/util';\r\nimport {delayed} from '../common/decorators';\r\n\r\nlet firstValue = {};\r\nexport class WidgetBase {\r\n/**\r\n* To Create an widget\r\n* @param option Object which contains  Element in which  widget will be created\r\n*/\r\n  createWidget(option) {\r\n    this.allOption = this.getWidgetOptions(option.element);\r\n    if (!this.ejOptions && !this.isEditor) {\r\n      this.createTwoWays();\r\n    }\r\n    this.widget = jQuery($(option.element))[this.controlName](this.allOption).data(this.controlName);\r\n    if (this.templateProcessor) {\r\n      this.templateProcessor.initWidgetDependancies();\r\n    }\r\n    if (this.isEditor) {\r\n      this.widget.model._change = (evt) => {\r\n        if ('eValue' in this) {\r\n          this[this.util.getBindablePropertyName('value')] = evt.value;\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  createTwoWays() {\r\n    let model = this.allOption;\r\n    let twoWays = this.twoWays;\r\n    let len = twoWays.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let prop = twoWays[i];\r\n      ej.createObject(prop, this.addTwoways(prop), model);\r\n    }\r\n  }\r\n\r\n  addTwoways(prop) {\r\n    let model = this;\r\n    let value = firstValue;\r\n    return function(newVal, isApp) {\r\n      if (value === firstValue) {\r\n        let viewModelProp = model.util.getBindablePropertyName(prop);\r\n        value = model[viewModelProp];\r\n        if (value === undefined) {\r\n          value = this.defaults[prop];\r\n        }\r\n        return value;\r\n      }\r\n      if (newVal === undefined) {\r\n        return value;\r\n      }\r\n      if (value === newVal) {\r\n        return null;\r\n      }\r\n      value = newVal;\r\n      if (!isApp && model.util.hasValue(newVal) ) {\r\n        let viewModelProp = model.util.getBindablePropertyName(prop);\r\n        model[viewModelProp] = newVal;\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n/**\r\n* To get property and event options from the element\r\n* @param element Element from which options are acquired\r\n*/\r\n  getWidgetOptions(element) {\r\n    let propOptions;\r\n    if (this.ejOptions) {\r\n      propOptions = this.ejOptions;\r\n    } else {\r\n      propOptions = this.util.getOptions(this, this.controlProperties);\r\n    }\r\n    let eventOption = getEventOption(element);\r\n    if (this.hasChildProperty) {\r\n      this.getChildProperties(propOptions);\r\n    }\r\n    return Object.assign({}, propOptions, eventOption);\r\n  }\r\n\r\n  getChildProperties(options) {\r\n    let PropertyName = this.childPropertyName;\r\n    let childCollection = this[PropertyName];\r\n    let len = childCollection.length;\r\n    if (len) {\r\n      options[PropertyName] = [];\r\n      let childProperties = childCollection[0].controlProperties;\r\n      for (let i = 0; i < len; i++) {\r\n        options[PropertyName].push(this.util.getOptions(childCollection[i], childProperties));\r\n      }\r\n    }\r\n  }\r\n\r\n  @delayed()\r\n  attached() {\r\n    if (this.templateProcessor) {\r\n      this[this.childPropertyName].forEach(template => template.setTemplates());\r\n    }\r\n    this.util = new Util();\r\n    this.createWidget({ element: this.element });\r\n  }\r\n/**\r\n * To change widget model value\r\n * @param property The viewModel property name\r\n * @param newValue New value of the property\r\n * @param oldvalue Pld value of the property\r\n */\r\n  propertyChanged(property, newValue, oldValue) {\r\n    if (this.widget) {\r\n      let modelValue;\r\n      let prop = this.util.getControlPropertyName(this, property);\r\n      if (prop) {\r\n        if (prop !== 'options') {\r\n          modelValue = this.widget.model[prop];\r\n          let isTwoway = typeof modelValue === 'function';\r\n          if (isTwoway) {\r\n            modelValue = modelValue();\r\n          }\r\n          if (modelValue !== newValue) {\r\n            if (isTwoway) {\r\n              newValue = this.addTwoways(prop);\r\n            }\r\n            this.widget.option(prop, newValue);\r\n          }\r\n        } else {\r\n          this.widget.option(newValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  detached() {\r\n    if (this.templateProcessor) {\r\n      this.templateProcessor.clearTempalte();\r\n    }\r\n    if (this.widget) {\r\n      this.widget.destroy();\r\n    }\r\n  }\r\n}\r\n\r\n"]}