{"version":3,"sources":["common/widget-base.js"],"names":["getEventOption","Util","delayed","firstValue","WidgetBase","createWidget","option","allOption","getWidgetOptions","element","ejOptions","isEditor","createTwoWays","eWidget","widget","jQuery","$","controlName","data","templateProcessor","initWidgetDependancies","model","_change","evt","util","getBindablePropertyName","value","bind","ctx","overrideCtx","parentCtx","eValue","undefined","twoWays","len","length","i","prop","ej","createObject","addTwoways","newVal","isApp","viewModelProp","defaults","hasValue","propOptions","getOptions","controlProperties","eventOption","hasChildProperty","getChildProperties","Object","assign","options","PropertyName","childPropertyName","childCollection","childProperties","push","attached","forEach","template","setTemplates","unsubscribe","subscription","dispose","unbind","propertyChanged","property","newValue","oldValue","modelValue","getControlPropertyName","arrayObserver","arrayProp","Array","bindingInstance","collectionObserver","subscribe","e","update","isTwoway","detached","clearTempalte","destroy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,oB,WAAAA,c;;AACAC,U,eAAAA,I;;AACAC,a,qBAAAA,O;;;AAEJC,gB,GAAa,E;;4BACJC,U,WAiGVF,S;;;;;6BA5FDG,Y,yBAAaC,M,EAAQ;AAAA;;AACnB,eAAKC,SAAL,GAAiB,KAAKC,gBAAL,CAAsBF,OAAOG,OAA7B,CAAjB;AACA,cAAI,CAAC,KAAKC,SAAN,IAAmB,CAAC,KAAKC,QAA7B,EAAuC;AACrC,iBAAKC,aAAL;AACD;AACD,eAAKC,OAAL,GAAe,KAAKC,MAAL,GAAcC,OAAOC,EAAEV,OAAOG,OAAT,CAAP,EAA0B,KAAKQ,WAA/B,EAA4C,KAAKV,SAAjD,EAA4DW,IAA5D,CAAiE,KAAKD,WAAtE,CAA7B;AACA,cAAI,KAAKE,iBAAT,EAA4B;AAC1B,iBAAKA,iBAAL,CAAuBC,sBAAvB;AACD;AACD,cAAI,KAAKT,QAAT,EAAmB;AACjB,iBAAKG,MAAL,CAAYO,KAAZ,CAAkBC,OAAlB,GAA4B,UAACC,GAAD,EAAS;AACnC,kBAAI,YAAY,KAAhB,EAAsB;AACpB,sBAAK,MAAKC,IAAL,CAAUC,uBAAV,CAAkC,OAAlC,CAAL,IAAmDF,IAAIG,KAAvD;AACD;AACF,aAJD;AAKD;AACF,S;;6BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKC,SAAL,GAAiBD,WAAjB;AACA,cAAI,KAAKf,MAAL,IAAe,KAAKA,MAAL,CAAYL,OAA3B,IAAsC,KAAKE,QAA/C,EAAyD;AACvD,iBAAKG,MAAL,CAAYR,MAAZ,CAAmB,OAAnB,EAA6B,KAAKyB,MAAL,KAAgBC,SAAhB,GAA4B,IAA5B,GAAmC,KAAKD,MAArE;AACD;AACF,S;;6BAEDnB,a,4BAAgB;AACd,cAAIS,QAAQ,KAAKd,SAAjB;AACA,cAAI0B,UAAU,KAAKA,OAAnB;AACA,cAAIC,MAAMD,QAAQE,MAAlB;AACA,eAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,GAApB,EAAyBE,GAAzB,EAA8B;AAC5B,gBAAIC,OAAOJ,QAAQG,CAAR,CAAX;AACAE,eAAGC,YAAH,CAAgBF,IAAhB,EAAsB,KAAKG,UAAL,CAAgBH,IAAhB,CAAtB,EAA6ChB,KAA7C;AACD;AACF,S;;6BAEDmB,U,uBAAWH,I,EAAM;AACf,cAAIhB,QAAQ,IAAZ;AACA,cAAIK,QAAQvB,UAAZ;AACA,iBAAO,UAASsC,MAAT,EAAiBC,KAAjB,EAAwB;AAC7B,gBAAIhB,UAAUvB,UAAd,EAA0B;AACxB,kBAAIwC,gBAAgBtB,MAAMG,IAAN,CAAWC,uBAAX,CAAmCY,IAAnC,CAApB;AACAX,sBAAQL,MAAMsB,aAAN,CAAR;AACA,kBAAIjB,UAAUM,SAAd,EAAyB;AACvBN,wBAAQ,KAAKkB,QAAL,CAAcP,IAAd,CAAR;AACD;AACD,qBAAOX,KAAP;AACD;AACD,gBAAIe,WAAWT,SAAf,EAA0B;AACxB,qBAAON,KAAP;AACD;AACD,gBAAIA,UAAUe,MAAd,EAAsB;AACpB,qBAAO,IAAP;AACD;AACDf,oBAAQe,MAAR;AACA,gBAAI,CAACC,KAAD,IAAUrB,MAAMG,IAAN,CAAWqB,QAAX,CAAoBJ,MAApB,CAAd,EAA4C;AAC1C,kBAAIE,iBAAgBtB,MAAMG,IAAN,CAAWC,uBAAX,CAAmCY,IAAnC,CAApB;AACAhB,oBAAMsB,cAAN,IAAuBF,MAAvB;AACD;AACD,mBAAO,IAAP;AACD,WArBD;AAsBD,S;;6BAKDjC,gB,6BAAiBC,O,EAAS;AACxB,cAAIqC,oBAAJ;AACA,cAAI,KAAKpC,SAAT,EAAoB;AAClBoC,0BAAc,KAAKpC,SAAnB;AACD,WAFD,MAEO;AACLoC,0BAAc,KAAKtB,IAAL,CAAUuB,UAAV,CAAqB,IAArB,EAA2B,KAAKC,iBAAhC,CAAd;AACD;AACD,cAAIC,cAAcjD,eAAeS,OAAf,CAAlB;AACA,cAAI,KAAKyC,gBAAT,EAA2B;AACzB,iBAAKC,kBAAL,CAAwBL,WAAxB;AACD;AACD,iBAAOM,OAAOC,MAAP,CAAc,EAAd,EAAkBP,WAAlB,EAA+BG,WAA/B,CAAP;AACD,S;;6BAEDE,kB,+BAAmBG,O,EAAS;AAC1B,cAAIC,eAAe,KAAKC,iBAAxB;AACA,cAAIC,kBAAkB,KAAKF,YAAL,CAAtB;AACA,cAAIrB,MAAMuB,gBAAgBtB,MAA1B;AACA,cAAID,GAAJ,EAAS;AACPoB,oBAAQC,YAAR,IAAwB,EAAxB;AACA,gBAAIG,kBAAkBD,gBAAgB,CAAhB,EAAmBT,iBAAzC;AACA,iBAAK,IAAIZ,IAAI,CAAb,EAAgBA,IAAIF,GAApB,EAAyBE,GAAzB,EAA8B;AAC5BkB,sBAAQC,YAAR,EAAsBI,IAAtB,CAA2B,KAAKnC,IAAL,CAAUuB,UAAV,CAAqBU,gBAAgBrB,CAAhB,CAArB,EAAyCsB,eAAzC,CAA3B;AACD;AACF;AACF,S;;6BAGDE,Q,uBAAW;AACT,cAAI,KAAKzC,iBAAT,EAA4B;AAC1B,iBAAK,KAAKqC,iBAAV,EAA6BK,OAA7B,CAAqC;AAAA,qBAAYC,SAASC,YAAT,EAAZ;AAAA,aAArC;AACD;AACD,eAAKvC,IAAL,GAAY,IAAIvB,IAAJ,EAAZ;AACA,eAAKI,YAAL,CAAkB,EAAEI,SAAS,KAAKA,OAAhB,EAAlB;AACD,S;;6BAEDuD,W,0BAAc;AACZ,cAAI,KAAKC,YAAT,EAAuB;AACrB,iBAAKA,YAAL,CAAkBC,OAAlB;AACA,iBAAKD,YAAL,GAAoB,IAApB;AACD;AACF,S;;6BAEDE,M,qBAAS;AACP,eAAKH,WAAL;AACD,S;;6BAQDI,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAAA;;AAC5C,cAAI,KAAKzD,MAAT,EAAiB;AACf,gBAAI0D,mBAAJ;AACA,gBAAInC,OAAO,KAAKb,IAAL,CAAUiD,sBAAV,CAAiC,IAAjC,EAAuCJ,QAAvC,CAAX;AACA,iBAAKL,WAAL;AACA,gBAAI,KAAKU,aAAT,EAAwB;AACtB,mBAAKA,aAAL,CAAmBb,OAAnB,CAA2B,UAACc,SAAD,EAAe;AACxC,oBAAI,OAAKA,SAAL,aAA2BC,KAA/B,EAAsC;AACpC,yBAAKX,YAAL,GAAoB,OAAKY,eAAL,CAAqBC,kBAArB,CAAwC,OAAKH,SAAL,CAAxC,EAAyDI,SAAzD,CAAmE,UAACC,CAAD,EAAO;AAC5F,2BAAKC,MAAL,CAAYD,CAAZ;AACD,mBAFmB,CAApB;AAGD;AACF,eAND;AAOD;AACD,gBAAI3C,IAAJ,EAAU;AACR,kBAAIA,SAAS,QAAb,EAAuB;AACrB;AACD,eAFD,MAEO,IAAIA,SAAS,SAAb,EAAwB;AAC7BmC,6BAAa,KAAK1D,MAAL,CAAYO,KAAZ,CAAkBgB,IAAlB,CAAb;AACA,oBAAI6C,WAAW,OAAOV,UAAP,KAAsB,UAArC;AACA,oBAAIU,QAAJ,EAAc;AACZV,+BAAaA,YAAb;AACD;AACD,oBAAIA,eAAeF,QAAnB,EAA6B;AAC3B,sBAAIY,QAAJ,EAAc;AACZZ,+BAAW,KAAK9B,UAAL,CAAgBH,IAAhB,CAAX;AACD;AACD,uBAAKvB,MAAL,CAAYR,MAAZ,CAAmB+B,IAAnB,EAAyBiC,QAAzB;AACD;AACF,eAZM,MAYA;AACL,qBAAKxD,MAAL,CAAYR,MAAZ,CAAmBgE,QAAnB;AACD;AACF;AACF;AACF,S;;6BAEDW,M,mBAAOD,C,EAAG;AAAA;;AACR,cAAIR,mBAAJ;AACA,cAAI/B,eAAJ;AACA,cAAIuC,EAAE7C,MAAN,EAAc;AACZ,iBAAKuC,aAAL,CAAmBb,OAAnB,CAA2B,UAACc,SAAD,EAAe;AACxC,kBAAI,OAAKA,SAAL,aAA2BC,KAA/B,EAAsC;AACpC,oBAAIvC,OAAO,OAAKb,IAAL,CAAUiD,sBAAV,CAAiC,MAAjC,EAAuCE,SAAvC,CAAX;AACAH,6BAAa,OAAK1D,MAAL,CAAYO,KAAZ,CAAkBgB,IAAlB,CAAb;AACA,oBAAI,OAAOmC,UAAP,KAAsB,UAA1B,EAAsC;AACpCA,+BAAaA,YAAb;AACA/B,2BAAS+B,UAAT;AACA/B,2BAAS,OAAKD,UAAL,CAAgBH,IAAhB,CAAT;AACA,yBAAKvB,MAAL,CAAYR,MAAZ,CAAmB+B,IAAnB,EAAyBI,MAAzB;AACD,iBALD,MAKO;AACL,yBAAK3B,MAAL,CAAYR,MAAZ,CAAmB+B,IAAnB,EAAyBmC,UAAzB;AACD;AACF;AACF,aAbD;AAcD;AACF,S;;6BAEDW,Q,uBAAW;AACT,cAAI,KAAKhE,iBAAT,EAA4B;AAC1B,iBAAKA,iBAAL,CAAuBiE,aAAvB;AACD;AACD,cAAI,KAAKtE,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYuE,OAAZ;AACD;AACF,S","file":"../../../common/widget-base.js","sourcesContent":["import {getEventOption} from './events';\r\nimport {Util} from '../common/util';\r\nimport {delayed} from '../common/decorators';\r\n\r\nlet firstValue = {};\r\nexport class WidgetBase {\r\n/**\r\n* To Create an widget\r\n* @param option Object which contains  Element in which  widget will be created\r\n*/\r\n  createWidget(option) {\r\n    this.allOption = this.getWidgetOptions(option.element);\r\n    if (!this.ejOptions && !this.isEditor) {\r\n      this.createTwoWays();\r\n    }\r\n    this.eWidget = this.widget = jQuery($(option.element))[this.controlName](this.allOption).data(this.controlName);\r\n    if (this.templateProcessor) {\r\n      this.templateProcessor.initWidgetDependancies();\r\n    }\r\n    if (this.isEditor) {\r\n      this.widget.model._change = (evt) => {\r\n        if ('eValue' in this) {\r\n          this[this.util.getBindablePropertyName('value')] = evt.value;\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.parentCtx = overrideCtx;\r\n    if (this.widget && this.widget.element && this.isEditor) {\r\n      this.widget.option('value', (this.eValue === undefined ? null : this.eValue));\r\n    }\r\n  }\r\n\r\n  createTwoWays() {\r\n    let model = this.allOption;\r\n    let twoWays = this.twoWays;\r\n    let len = twoWays.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let prop = twoWays[i];\r\n      ej.createObject(prop, this.addTwoways(prop), model);\r\n    }\r\n  }\r\n\r\n  addTwoways(prop) {\r\n    let model = this;\r\n    let value = firstValue;\r\n    return function(newVal, isApp) {\r\n      if (value === firstValue) {\r\n        let viewModelProp = model.util.getBindablePropertyName(prop);\r\n        value = model[viewModelProp];\r\n        if (value === undefined) {\r\n          value = this.defaults[prop];\r\n        }\r\n        return value;\r\n      }\r\n      if (newVal === undefined) {\r\n        return value;\r\n      }\r\n      if (value === newVal) {\r\n        return null;\r\n      }\r\n      value = newVal;\r\n      if (!isApp && model.util.hasValue(newVal) ) {\r\n        let viewModelProp = model.util.getBindablePropertyName(prop);\r\n        model[viewModelProp] = newVal;\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n/**\r\n* To get property and event options from the element\r\n* @param element Element from which options are acquired\r\n*/\r\n  getWidgetOptions(element) {\r\n    let propOptions;\r\n    if (this.ejOptions) {\r\n      propOptions = this.ejOptions;\r\n    } else {\r\n      propOptions = this.util.getOptions(this, this.controlProperties);\r\n    }\r\n    let eventOption = getEventOption(element);\r\n    if (this.hasChildProperty) {\r\n      this.getChildProperties(propOptions);\r\n    }\r\n    return Object.assign({}, propOptions, eventOption);\r\n  }\r\n\r\n  getChildProperties(options) {\r\n    let PropertyName = this.childPropertyName;\r\n    let childCollection = this[PropertyName];\r\n    let len = childCollection.length;\r\n    if (len) {\r\n      options[PropertyName] = [];\r\n      let childProperties = childCollection[0].controlProperties;\r\n      for (let i = 0; i < len; i++) {\r\n        options[PropertyName].push(this.util.getOptions(childCollection[i], childProperties));\r\n      }\r\n    }\r\n  }\r\n\r\n  @delayed()\r\n  attached() {\r\n    if (this.templateProcessor) {\r\n      this[this.childPropertyName].forEach(template => template.setTemplates());\r\n    }\r\n    this.util = new Util();\r\n    this.createWidget({ element: this.element });\r\n  }\r\n\r\n  unsubscribe() {\r\n    if (this.subscription) {\r\n      this.subscription.dispose();\r\n      this.subscription = null;\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n/**\r\n * To change widget model value\r\n * @param property The viewModel property name\r\n * @param newValue New value of the property\r\n * @param oldvalue Pld value of the property\r\n */\r\n  propertyChanged(property, newValue, oldValue) {\r\n    if (this.widget) {\r\n      let modelValue;\r\n      let prop = this.util.getControlPropertyName(this, property);\r\n      this.unsubscribe();\r\n      if (this.arrayObserver) {\r\n        this.arrayObserver.forEach((arrayProp) => {\r\n          if (this[arrayProp] instanceof Array) {\r\n            this.subscription = this.bindingInstance.collectionObserver(this[arrayProp]).subscribe((e) => {\r\n              this.update(e);\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (prop) {\r\n        if (prop === 'widget') {\r\n          return;\r\n        } else if (prop !== 'options') {\r\n          modelValue = this.widget.model[prop];\r\n          let isTwoway = typeof modelValue === 'function';\r\n          if (isTwoway) {\r\n            modelValue = modelValue();\r\n          }\r\n          if (modelValue !== newValue) {\r\n            if (isTwoway) {\r\n              newValue = this.addTwoways(prop);\r\n            }\r\n            this.widget.option(prop, newValue);\r\n          }\r\n        } else {\r\n          this.widget.option(newValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  update(e) {\r\n    let modelValue;\r\n    let newVal;\r\n    if (e.length) {\r\n      this.arrayObserver.forEach((arrayProp) => {\r\n        if (this[arrayProp] instanceof Array) {\r\n          let prop = this.util.getControlPropertyName(this, arrayProp);\r\n          modelValue = this.widget.model[prop];\r\n          if (typeof modelValue === 'function') {\r\n            modelValue = modelValue();\r\n            newVal = modelValue;\r\n            newVal = this.addTwoways(prop);\r\n            this.widget.option(prop, newVal);\r\n          } else {\r\n            this.widget.option(prop, modelValue);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  detached() {\r\n    if (this.templateProcessor) {\r\n      this.templateProcessor.clearTempalte();\r\n    }\r\n    if (this.widget) {\r\n      this.widget.destroy();\r\n    }\r\n  }\r\n}\r\n"]}